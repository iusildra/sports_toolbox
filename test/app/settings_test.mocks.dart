// Mocks generated by Mockito 5.4.5 from annotations
// in sports_toolbox/test/app/settings_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:sports_toolbox/models/settings_model.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NoVibration].
///
/// See the documentation for Mockito's code generation for more information.
class MockNoVibration extends _i1.Mock implements _i2.NoVibration {
  MockNoVibration() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get hasVibrator =>
      (super.noSuchMethod(
            Invocation.getter(#hasVibrator),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<void> performVibrate() =>
      (super.noSuchMethod(
            Invocation.method(#performVibrate, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}

/// A class which mocks [VibrationWithSettings].
///
/// See the documentation for Mockito's code generation for more information.
class MockVibrationWithSettings extends _i1.Mock
    implements _i2.VibrationWithSettings {
  MockVibrationWithSettings() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get duration =>
      (super.noSuchMethod(Invocation.getter(#duration), returnValue: 0) as int);

  @override
  int get intensity =>
      (super.noSuchMethod(Invocation.getter(#intensity), returnValue: 0)
          as int);

  @override
  _i3.Future<bool> get hasVibrator =>
      (super.noSuchMethod(
            Invocation.getter(#hasVibrator),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<void> performVibrate() =>
      (super.noSuchMethod(
            Invocation.method(#performVibrate, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
